version: '3'
services:
  db:
    image: postgres:16.1-alpine
    environment:
      POSTGRES_PASSWORD: "admin"
    ports:
      - "5432:5432"
    volumes:
      - ./../../../scripts/migration/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - production-network
  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    restart: always
    container_name: kafka-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka-broker:
    image: confluentinc/cp-kafka:7.3.7
    restart: always
    container_name: kafka-broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-broker:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'kafka-zookeeper:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - kafka-zookeeper
  kafka-topics-generator:
    image: confluentinc/cp-kafka:7.3.7
    depends_on:
      - kafka-broker
      - kafka-zookeeper
    command: >
      bash -c
        "sleep 5s &&
        kafka-topics --create --topic=order_created_event --if-not-exists --bootstrap-server=kafka-broker:19092 &&
        kafka-topics --create --topic=order_creation_requested_event --if-not-exists --bootstrap-server=kafka-broker:19092 &&
        kafka-topics --create --topic=order_creation_requested_event-dlt --if-not-exists --bootstrap-server=kafka-broker:19092"
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    restart: always
    container_name: kafka-schema-registry
    hostname: kafka-schema-registry
    ports:
      - "9081:9081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:9081
    depends_on:
      - kafka-zookeeper
      - kafka-broker

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    depends_on:
      - kafka-broker
      - kafka-schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka-broker:19092"
      CONTROL_CENTER_KAFKA_CLUSTER_ID: "docker"
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://kafka-schema-registry:9081"
      CONNECT_VALUE_CONVERTER_DECIMAL_FORMAT: 'STRING'
  redis:
      image: redis:latest
      container_name: redis-cache
      restart: always
      ports:
        - "6379:6379"
      command: [ "redis-server", "--appendonly", "yes" ]
      volumes:
        - ~/redis_data:/data
volumes:
  container-volume:
networks:
  production-network:
    driver: bridge
